import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.RemoteException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Random;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class WezelCentralnyF extends JFrame{
    
    private static CenterInterface look_up;
    
    private int liczbaWezlow;
    
    private HashSet<Integer> wylosowaneWezly;
    
    private HashSet<String> nazwyPlikow;
    
    private String[] listData;
    private String[] peersIDData;
    
    private int liczbaPlikow;
    
    public WezelCentralnyF(){
        initComponents();
        liczbaWezlow = 0;
        liczbaPlikow = 0;
        wylosowaneWezly = new HashSet<Integer>();
        nazwyPlikow = new HashSet<String>();
        try {
            look_up = (CenterInterface) Naming.lookup("//localhost/MyServer");
        } catch (Exception e) {
            System.err.println("Frame exception: " + e.toString());
            e.printStackTrace();
        }
        loadFiles();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        idList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        filenameList = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        wezlyList = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        registerButton = new javax.swing.JButton();
        sendButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        filenameField = new javax.swing.JTextField();
        getButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(idList);

        jLabel1.setText("ID wezlow");

        jLabel2.setText("Nazwy plikow");

        jScrollPane2.setViewportView(filenameList);

        jScrollPane3.setViewportView(wezlyList);

        jLabel3.setText("Wezly plikow");

        registerButton.setText("Zarejestrowanie nowego wezla");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        sendButton.setText("Wyslanie pliku");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Nazwa pliku");

        getButton.setText("Pobranie pliku");
        getButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(registerButton))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(18, 18, 18)
                            .addComponent(filenameField)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(sendButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(registerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(filenameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sendButton)
                    .addComponent(getButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        try {
            look_up.registerNode();
        } catch (RemoteException e) {
            System.err.println("Frame exception: " + e.toString());
            e.printStackTrace();
        }
        liczbaWezlow++;
        setIDWezlow(liczbaWezlow);
    }//GEN-LAST:event_registerButtonActionPerformed

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        if(liczbaWezlow<3)
            JOptionPane.showMessageDialog(null, "Ilosc wezlow musi byc rowna 3 lub wiecej");
        else{
            int rand;
            Random r;
            wylosowaneWezly.clear();
            for(int i=0;i<3;i++){
                r=new Random();
                rand = r.nextInt(liczbaWezlow);
                while(!wylosowaneWezly.add(rand%liczbaWezlow)){
                    rand = r.nextInt(liczbaWezlow);
                }
            }
            int[] tab = new int[3];
            for(int i=0;i<3;i++){
                tab[i] = (int)wylosowaneWezly.toArray()[i];
            }
            try {
                look_up.uploadFile(tab, filenameField.getText());
            } catch (RemoteException e) {
                System.err.println("Frame exception: " + e.toString());
                e.printStackTrace();
            }
            loadFiles();
        }
    }//GEN-LAST:event_sendButtonActionPerformed

    private void getButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getButtonActionPerformed
        if(liczbaWezlow<3)
            JOptionPane.showMessageDialog(null, "Ilosc wezlow musi byc rowna 3 lub wiecej");
        else{
            loadFiles();
            StringBuilder sb = new StringBuilder();
            int[] peers = new int[3];
            for(int i=0;i<listData.length;i++){
                if(listData[i].equals(filenameField.getText())){
                    for(int j=0;j<3;j++){
                        peers[j]=Integer.parseInt(peersIDData[i].substring(2*j,2*j+1));
                        if(liczbaWezlow<peers[j]+1){
                            System.err.println("Musi najpierw zostac stworzony peer o nastepujacym ID: "+peers[j]);
                            return;
                        }
                        try {
                            sb.append(look_up.downloadFile(peers[j], filenameField.getText()));
                        } catch (RemoteException e) {
                            System.err.println("Frame exception: " + e.toString());
                            e.printStackTrace();
                        }
                    }
                }
            }
            PrintWriter out;
            try {
                out = new PrintWriter("src/WezelGlownyPobrane/"+filenameField.getText()+".txt");
                out.print(sb.toString());
                out.close();
            } catch (FileNotFoundException e) {
                System.err.println("Frame exception: " + e.toString());
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_getButtonActionPerformed

    public void setIDWezlow(int liczbaWezlow){
        idList.setListData(new String[0]);
        String[] listData = new String[liczbaWezlow];
        for(int i=0;i<liczbaWezlow;i++){
            listData[i] = Integer.toString(i);
        }
        idList.setListData(listData);
    }
    
    public void loadFiles(){
        File folder = new File("src/");
        File[] listOfFiles = folder.listFiles();

        for (int i = 0; i < listOfFiles.length; i++) {
            if (listOfFiles[i].isDirectory()) {
                if(listOfFiles[i].toString().substring(listOfFiles[i].toString().length()-6, listOfFiles[i].toString().length()).equals("wywane")){
                    File folder2 = new File(listOfFiles[i].toString()+"/");
                    File[] listOfFiles2 = folder2.listFiles();
                    for (int j = 0; j < listOfFiles2.length; j++) {
                        if(nazwyPlikow.add(listOfFiles2[j].toString().substring(24, listOfFiles2[j].toString().length()-5)))
                            liczbaPlikow++;
                    }
                }
            }
        }
        
        filenameList.setListData(new String[0]);
        wezlyList.setListData(new String[0]);
        listData = new String[liczbaPlikow];
        peersIDData = new String[liczbaPlikow];
        Object[] tab = nazwyPlikow.toArray();
        for(int i=0;i<liczbaPlikow;i++){
            listData[i] = tab[i].toString();
            try {
                peersIDData[i] = look_up.getPeersForFile(listData[i]);
                
            } catch (RemoteException e) {
                System.err.println("Frame exception: " + e.toString());
                e.printStackTrace();
            }
        }
        filenameList.setListData(listData);
        wezlyList.setListData(peersIDData);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WezelCentralnyF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WezelCentralnyF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WezelCentralnyF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WezelCentralnyF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WezelCentralnyF().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField filenameField;
    private javax.swing.JList<String> filenameList;
    private javax.swing.JButton getButton;
    private javax.swing.JList<String> idList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton registerButton;
    private javax.swing.JButton sendButton;
    private javax.swing.JList<String> wezlyList;
    // End of variables declaration//GEN-END:variables

}
